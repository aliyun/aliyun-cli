package acms_open

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeConfiguration invokes the acms_open.DescribeConfiguration API synchronously
// api document: https://help.aliyun.com/api/acms-open/describeconfiguration.html
func (client *Client) DescribeConfiguration(request *DescribeConfigurationRequest) (response *DescribeConfigurationResponse, err error) {
	response = CreateDescribeConfigurationResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeConfigurationWithChan invokes the acms_open.DescribeConfiguration API asynchronously
// api document: https://help.aliyun.com/api/acms-open/describeconfiguration.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeConfigurationWithChan(request *DescribeConfigurationRequest) (<-chan *DescribeConfigurationResponse, <-chan error) {
	responseChan := make(chan *DescribeConfigurationResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeConfiguration(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeConfigurationWithCallback invokes the acms_open.DescribeConfiguration API asynchronously
// api document: https://help.aliyun.com/api/acms-open/describeconfiguration.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeConfigurationWithCallback(request *DescribeConfigurationRequest, callback func(response *DescribeConfigurationResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeConfigurationResponse
		var err error
		defer close(result)
		response, err = client.DescribeConfiguration(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeConfigurationRequest is the request struct for api DescribeConfiguration
type DescribeConfigurationRequest struct {
	*requests.RoaRequest
	DataId      string `position:"Query" name:"DataId"`
	NamespaceId string `position:"Query" name:"NamespaceId"`
	Group       string `position:"Query" name:"Group"`
}

// DescribeConfigurationResponse is the response struct for api DescribeConfiguration
type DescribeConfigurationResponse struct {
	*responses.BaseResponse
	RequestId     string        `json:"RequestId" xml:"RequestId"`
	Message       string        `json:"Message" xml:"Message"`
	Code          string        `json:"Code" xml:"Code"`
	Configuration Configuration `json:"Configuration" xml:"Configuration"`
}

// CreateDescribeConfigurationRequest creates a request to invoke DescribeConfiguration API
func CreateDescribeConfigurationRequest() (request *DescribeConfigurationRequest) {
	request = &DescribeConfigurationRequest{
		RoaRequest: &requests.RoaRequest{},
	}
	request.InitWithApiInfo("acms-open", "2020-02-06", "DescribeConfiguration", "/diamond-ops/pop/configuration", "acms", "openAPI")
	request.Method = requests.GET
	return
}

// CreateDescribeConfigurationResponse creates a response to parse from DescribeConfiguration response
func CreateDescribeConfigurationResponse() (response *DescribeConfigurationResponse) {
	response = &DescribeConfigurationResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
