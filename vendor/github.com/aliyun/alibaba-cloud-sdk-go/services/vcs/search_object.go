package vcs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// SearchObject invokes the vcs.SearchObject API synchronously
func (client *Client) SearchObject(request *SearchObjectRequest) (response *SearchObjectResponse, err error) {
	response = CreateSearchObjectResponse()
	err = client.DoAction(request, response)
	return
}

// SearchObjectWithChan invokes the vcs.SearchObject API asynchronously
func (client *Client) SearchObjectWithChan(request *SearchObjectRequest) (<-chan *SearchObjectResponse, <-chan error) {
	responseChan := make(chan *SearchObjectResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.SearchObject(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// SearchObjectWithCallback invokes the vcs.SearchObject API asynchronously
func (client *Client) SearchObjectWithCallback(request *SearchObjectRequest, callback func(response *SearchObjectResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *SearchObjectResponse
		var err error
		defer close(result)
		response, err = client.SearchObject(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// SearchObjectRequest is the request struct for api SearchObject
type SearchObjectRequest struct {
	*requests.RpcRequest
	AlgorithmType string                 `position:"Body" name:"AlgorithmType"`
	CorpId        string                 `position:"Body" name:"CorpId"`
	EndTime       requests.Integer       `position:"Body" name:"EndTime"`
	StartTime     requests.Integer       `position:"Body" name:"StartTime"`
	PageNumber    requests.Integer       `position:"Body" name:"PageNumber"`
	DeviceList    map[string]interface{} `position:"Body" name:"DeviceList"`
	PicUrl        string                 `position:"Body" name:"PicUrl"`
	ImagePath     string                 `position:"Body" name:"ImagePath"`
	PageSize      requests.Integer       `position:"Body" name:"PageSize"`
	ObjectType    string                 `position:"Body" name:"ObjectType"`
	Conditions    string                 `position:"Body" name:"Conditions"`
}

// SearchObjectResponse is the response struct for api SearchObject
type SearchObjectResponse struct {
	*responses.BaseResponse
	Code      string             `json:"Code" xml:"Code"`
	Message   string             `json:"Message" xml:"Message"`
	RequestId string             `json:"RequestId" xml:"RequestId"`
	Data      DataInSearchObject `json:"Data" xml:"Data"`
}

// CreateSearchObjectRequest creates a request to invoke SearchObject API
func CreateSearchObjectRequest() (request *SearchObjectRequest) {
	request = &SearchObjectRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Vcs", "2020-05-15", "SearchObject", "", "")
	request.Method = requests.POST
	return
}

// CreateSearchObjectResponse creates a response to parse from SearchObject response
func CreateSearchObjectResponse() (response *SearchObjectResponse) {
	response = &SearchObjectResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
