package dybaseapi

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// QueryTokenForMnsQueue invokes the dybaseapi.QueryTokenForMnsQueue API synchronously
// api document: https://help.aliyun.com/api/dybaseapi/querytokenformnsqueue.html
func (client *Client) QueryTokenForMnsQueue(request *QueryTokenForMnsQueueRequest) (response *QueryTokenForMnsQueueResponse, err error) {
	response = CreateQueryTokenForMnsQueueResponse()
	err = client.DoAction(request, response)
	return
}

// QueryTokenForMnsQueueWithChan invokes the dybaseapi.QueryTokenForMnsQueue API asynchronously
// api document: https://help.aliyun.com/api/dybaseapi/querytokenformnsqueue.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) QueryTokenForMnsQueueWithChan(request *QueryTokenForMnsQueueRequest) (<-chan *QueryTokenForMnsQueueResponse, <-chan error) {
	responseChan := make(chan *QueryTokenForMnsQueueResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.QueryTokenForMnsQueue(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// QueryTokenForMnsQueueWithCallback invokes the dybaseapi.QueryTokenForMnsQueue API asynchronously
// api document: https://help.aliyun.com/api/dybaseapi/querytokenformnsqueue.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) QueryTokenForMnsQueueWithCallback(request *QueryTokenForMnsQueueRequest, callback func(response *QueryTokenForMnsQueueResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *QueryTokenForMnsQueueResponse
		var err error
		defer close(result)
		response, err = client.QueryTokenForMnsQueue(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// QueryTokenForMnsQueueRequest is the request struct for api QueryTokenForMnsQueue
type QueryTokenForMnsQueueRequest struct {
	*requests.RpcRequest
	QueueName            string           `position:"Query" name:"QueueName"`
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	MessageType          string           `position:"Query" name:"MessageType"`
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
}

// QueryTokenForMnsQueueResponse is the response struct for api QueryTokenForMnsQueue
type QueryTokenForMnsQueueResponse struct {
	*responses.BaseResponse
	RequestId       string          `json:"RequestId" xml:"RequestId"`
	Code            string          `json:"Code" xml:"Code"`
	Message         string          `json:"Message" xml:"Message"`
	MessageTokenDTO MessageTokenDTO `json:"MessageTokenDTO" xml:"MessageTokenDTO"`
}

// CreateQueryTokenForMnsQueueRequest creates a request to invoke QueryTokenForMnsQueue API
func CreateQueryTokenForMnsQueueRequest() (request *QueryTokenForMnsQueueRequest) {
	request = &QueryTokenForMnsQueueRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Dybaseapi", "2017-05-25", "QueryTokenForMnsQueue", "dybaseapi", "openAPI")
	return
}

// CreateQueryTokenForMnsQueueResponse creates a response to parse from QueryTokenForMnsQueue response
func CreateQueryTokenForMnsQueueResponse() (response *QueryTokenForMnsQueueResponse) {
	response = &QueryTokenForMnsQueueResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
